diff --git a/node_modules/@wyw-in-js/esbuild/esm/index.mjs b/node_modules/@wyw-in-js/esbuild/esm/index.mjs
index 51afde5..059daa0 100644
--- a/node_modules/@wyw-in-js/esbuild/esm/index.mjs
+++ b/node_modules/@wyw-in-js/esbuild/esm/index.mjs
@@ -8,12 +8,14 @@ import { readFileSync } from 'fs';
 import { basename, dirname, isAbsolute, join, parse, posix } from 'path';
 import { transformSync } from 'esbuild';
 import { slugify, transform, TransformCacheCollection, createFileReporter } from '@wyw-in-js/transform';
+import { transformSync as babelTransformSync } from '@babel/core';
 const nodeModulesRegex = /^(?:.*[\\/])?node_modules(?:[\\/].*)?$/;
 export default function wywInJS({
   debug,
   sourceMap,
   preprocessor,
   esbuildOptions,
+  babelPreTransformOptions,
   filter = /\.(js|jsx|ts|tsx)$/,
   ...rest
 } = {}) {
@@ -84,12 +86,17 @@ export default function wywInJS({
             options.jsxFragment = build.initialOptions.jsxFragment;
           }
         }
-        const transformed = transformSync(rawCode, {
+        const transformedJs = transformSync(rawCode, {
           ...options,
           sourcefile: args.path,
           sourcemap: sourceMap,
           loader
         });
+
+        const transformed = babelTransformSync(transformedJs.code,
+          babelPreTransformOptions
+        );
+
         let {
           code
         } = transformed;
diff --git a/node_modules/@wyw-in-js/esbuild/types/index.d.ts b/node_modules/@wyw-in-js/esbuild/types/index.d.ts
index a978714..13e6f07 100644
--- a/node_modules/@wyw-in-js/esbuild/types/index.d.ts
+++ b/node_modules/@wyw-in-js/esbuild/types/index.d.ts
@@ -5,12 +5,14 @@
  */
 import type { Plugin, TransformOptions } from 'esbuild';
 import type { PluginOptions, Preprocessor, IFileReporterOptions } from '@wyw-in-js/transform';
+import type { TransformOptions as BabelTransformOptions } from '@babel/core';
 type EsbuildPluginOptions = {
     debug?: IFileReporterOptions | false | null | undefined;
     esbuildOptions?: TransformOptions;
     filter?: RegExp | string;
     preprocessor?: Preprocessor;
     sourceMap?: boolean;
+    babelPreTransformOptions?: BabelTransformOptions;
 } & Partial<PluginOptions>;
 export default function wywInJS({ debug, sourceMap, preprocessor, esbuildOptions, filter, ...rest }?: EsbuildPluginOptions): Plugin;
 export {};
